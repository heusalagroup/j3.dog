{"config":{"indexing":"full","lang":["en"],"min_search_length":2,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introducing j3dog: The Secure, Scalable 3D Object Database \u00b6 The j3dog database is a secure, scalable data storage solution designed to provide fast and reliable access to large amounts of data. With a focus on security, performance, and scalability, the j3dog database is well-suited for a wide range of applications and use cases. Key Features \u00b6 Secure: The j3dog database is designed to protect sensitive and confidential data, with the ability to run on-premises and on private networks. Scalable: The j3dog database is able to handle high volumes of data and traffic and is scalable to meet the needs of its users. Fast and reliable: The j3dog database is optimized for fast read operations and efficient data modification, making it well-suited for a wide range of applications. Flexible: The j3dog database provides a JSON-based REST API with CRUD access to data and the ability to run specific queries on the server side. It also has built-in support for creating custom REST APIs, and an spreadsheet app that end users can use to manipulate and manage the database. Data Structure \u00b6 The j3dog database stores data in a three dimensional structure, with each cell of the structure being represented by a JSON array. Different nodes in the database are layered from different sides, with each cell being saved three times to three different arrays. Modification to one of these cells will trigger a change to the three layers it is saved on, but will leave the other layers unchanged. This allows the j3dog database to be fault tolerant and have a copy-on-write type of access to most cells in the database. API and Integration Points \u00b6 The j3dog database provides a number of API and integration points to allow for easy integration with other systems and applications. These include: JSON-based REST API: The j3dog database provides a REST API with CRUD access to data and the ability to run specific queries on the server side. This API can be used to programmatically access and manipulate data in the database. Custom REST APIs: The j3dog database has built-in support for creating custom REST APIs, making it easy to integrate with other systems and applications. Spreadsheet app: The j3dog database includes a simple spreadsheet app that end users can use to manipulate and manage data in the database. This app is accessible through a web browser and does not require any special software or applications to be installed. These API and integration points allow the j3dog database to be easily integrated with a wide range of systems and applications, and make it simple for users to access and manipulate data in the database. Security Measures \u00b6 The j3dog database is designed with security as a top priority. Measures are in place to protect sensitive and confidential data, including the ability to run the database on-premises and on private networks. Additionally, it is possible to restrict or lessen access to specific parts of the three dimensional grids, allowing for granular control over who has access to what data. These measures help to ensure that organizations using the j3dog database are able to truly own and protect their data, and make the database suitable for use in a wide range of applications and scenarios. Performance and Scalability \u00b6 The j3dog database is designed to be fast and reliable, with optimized read operations and efficient data modification. It is also scalable, able to handle high volumes of data and traffic to meet the needs of its users. While the j3dog database is expected to have excellent performance and scalability, these characteristics have not yet been proven. Further testing and evaluation will be necessary to determine the full extent of the database's capabilities. Example Use Cases \u00b6 The j3dog database is well-suited for a wide range of applications and use cases. Some example use cases include: Persistent storage for modern apps: The j3dog database can serve as the persistent storage service for a three dimensional spreadsheet application, or as a document database for any modern app. Data storage and analysis: The j3dog database can be used to store and analyze large amounts of data, with the ability to run specific queries and manipulate data through the API or spreadsheet app. Data sharing and collaboration: The j3dog database can be used to share and collaborate on data with others, with the ability to restrict access to specific parts of the database as needed. These are just a few examples of the many ways in which the j3dog database can be used. Its flexibility and versatility make it suitable for a wide range of applications and scenarios. Conclusion \u00b6 The j3dog database is a secure, scalable data storage solution designed to provide fast and reliable access to large amounts of data. With a focus on security, performance, and scalability, the j3dog database is well-suited for a wide range of applications and use cases. If you are interested in trying out the j3dog database for your own applications or data storage needs, we encourage you to visit our website and learn more about the database and its capabilities.","title":"Introduction"},{"location":"#introducing-j3dog-the-secure-scalable-3d-object-database","text":"The j3dog database is a secure, scalable data storage solution designed to provide fast and reliable access to large amounts of data. With a focus on security, performance, and scalability, the j3dog database is well-suited for a wide range of applications and use cases.","title":"Introducing j3dog: The Secure, Scalable 3D Object Database"},{"location":"#key-features","text":"Secure: The j3dog database is designed to protect sensitive and confidential data, with the ability to run on-premises and on private networks. Scalable: The j3dog database is able to handle high volumes of data and traffic and is scalable to meet the needs of its users. Fast and reliable: The j3dog database is optimized for fast read operations and efficient data modification, making it well-suited for a wide range of applications. Flexible: The j3dog database provides a JSON-based REST API with CRUD access to data and the ability to run specific queries on the server side. It also has built-in support for creating custom REST APIs, and an spreadsheet app that end users can use to manipulate and manage the database.","title":"Key Features"},{"location":"#data-structure","text":"The j3dog database stores data in a three dimensional structure, with each cell of the structure being represented by a JSON array. Different nodes in the database are layered from different sides, with each cell being saved three times to three different arrays. Modification to one of these cells will trigger a change to the three layers it is saved on, but will leave the other layers unchanged. This allows the j3dog database to be fault tolerant and have a copy-on-write type of access to most cells in the database.","title":"Data Structure"},{"location":"#api-and-integration-points","text":"The j3dog database provides a number of API and integration points to allow for easy integration with other systems and applications. These include: JSON-based REST API: The j3dog database provides a REST API with CRUD access to data and the ability to run specific queries on the server side. This API can be used to programmatically access and manipulate data in the database. Custom REST APIs: The j3dog database has built-in support for creating custom REST APIs, making it easy to integrate with other systems and applications. Spreadsheet app: The j3dog database includes a simple spreadsheet app that end users can use to manipulate and manage data in the database. This app is accessible through a web browser and does not require any special software or applications to be installed. These API and integration points allow the j3dog database to be easily integrated with a wide range of systems and applications, and make it simple for users to access and manipulate data in the database.","title":"API and Integration Points"},{"location":"#security-measures","text":"The j3dog database is designed with security as a top priority. Measures are in place to protect sensitive and confidential data, including the ability to run the database on-premises and on private networks. Additionally, it is possible to restrict or lessen access to specific parts of the three dimensional grids, allowing for granular control over who has access to what data. These measures help to ensure that organizations using the j3dog database are able to truly own and protect their data, and make the database suitable for use in a wide range of applications and scenarios.","title":"Security Measures"},{"location":"#performance-and-scalability","text":"The j3dog database is designed to be fast and reliable, with optimized read operations and efficient data modification. It is also scalable, able to handle high volumes of data and traffic to meet the needs of its users. While the j3dog database is expected to have excellent performance and scalability, these characteristics have not yet been proven. Further testing and evaluation will be necessary to determine the full extent of the database's capabilities.","title":"Performance and Scalability"},{"location":"#example-use-cases","text":"The j3dog database is well-suited for a wide range of applications and use cases. Some example use cases include: Persistent storage for modern apps: The j3dog database can serve as the persistent storage service for a three dimensional spreadsheet application, or as a document database for any modern app. Data storage and analysis: The j3dog database can be used to store and analyze large amounts of data, with the ability to run specific queries and manipulate data through the API or spreadsheet app. Data sharing and collaboration: The j3dog database can be used to share and collaborate on data with others, with the ability to restrict access to specific parts of the database as needed. These are just a few examples of the many ways in which the j3dog database can be used. Its flexibility and versatility make it suitable for a wide range of applications and scenarios.","title":"Example Use Cases"},{"location":"#conclusion","text":"The j3dog database is a secure, scalable data storage solution designed to provide fast and reliable access to large amounts of data. With a focus on security, performance, and scalability, the j3dog database is well-suited for a wide range of applications and use cases. If you are interested in trying out the j3dog database for your own applications or data storage needs, we encourage you to visit our website and learn more about the database and its capabilities.","title":"Conclusion"},{"location":"examples/","text":"Example Use Case: Three-Dimensional Spreadsheet \u00b6 This is an example of how a three-dimensional spreadsheet database could be used to track and calculate hours, hourly fees, and sales for multiple projects and multiple people. The database has three dimensions: the X dimension represents different projects, the Y dimension represents different people, and the Z dimension has three layers: one for tracking hours ( Z1 ), one for tracking hourly fees ( Z2 ), and one for tracking sales ( Z3 ). The database allows users to easily track and calculate this data, and to use formulas to perform calculations such as summing hours or averaging fees. Aliases \u00b6 To make formulas easier to read and write, layers may be given aliases: Z1 is referred to as HOURS Z2 is referred to as FEE Z3 is referred to as SALES Z1 : Layer for hours for each person in each project \u00b6 This table displays the contents of the layer Z1 and cells in X and Y dimensions. Each cell contains the hours to be invoiced for each person. The last cell has a formula to calculate the sum of all hours. Person Project Phoenix Project Infinity Project Nexus Total Hours Alice Smith 100 57 0 SUM(X2:X-1) Bob Johnson 100 7 50 SUM(X2:X-1) Charlie Williams 50 20 10 SUM(X2:X-1) Diana Brown 50 50 50 SUM(X2:X-1) Eve Taylor 50 0 57 SUM(X2:X-1) Frank Anderson 23 90 40 SUM(X2:X-1) Grace Davis 15 42 40 SUM(X2:X-1) Henry Thompson 10 10 30 SUM(X2:X-1) Isabella Moore 0 0 120 SUM(X2:X-1) James Rodriguez 0 40 30 SUM(X2:X-1) Total Hours SUM(Y2:Y-1) SUM(Y2:Y-1) SUM(Y2:Y-1) SUM(X2:X-1) Cells may contain values or formulas. Z2 : Layer for hourly fee for each person in each project \u00b6 This table displays the contents of the layer Z2 and cells in X and Y dimensions. Each cell contains the hourly fee for services provided. The last cell has a formula to calculate the average hourly fee. Person Project Phoenix Project Infinity Project Nexus Average Fee per hour Alice Smith 90 90 90 SUM(X2:X-1) Bob Johnson 50 50 50 SUM(X2:X-1) Charlie Williams 75 80 0 SUM(X2:X-1) Diana Brown 50 50 50 SUM(X2:X-1) Eve Taylor 50 50 50 SUM(X2:X-1) Frank Anderson 50 50 50 SUM(X2:X-1) Grace Davis 50 50 50 SUM(X2:X-1) Henry Thompson 90 90 90 SUM(X2:X-1) Isabella Moore 120 120 120 SUM(X2:X-1) James Rodriguez 200 200 200 SUM(X2:X-1) Average Fee per Hour AVG(Y2:Y-1) AVG(Y2:Y-1) AVG(Y2:Y-1) SUM(X2:X-1) Z3 : Layer for total sales for each person in each project \u00b6 To calculate the total sales for each person in each project, you can use the following formula: SALES = HOURS * FEE To calculate the total sales for each person in each project, you can create a new layer in the three-dimensional spreadsheet and use the formula above for each cell. This table displays the contents of the layer Z3 and cells in X and Y dimensions. Each cell contains the total sales for each person. The last cell has a formula to calculate the sum of all total sales. Person Project Phoenix Project Infinity Project Nexus Total Sales Alice Smith HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Bob Johnson HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Charlie Williams HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Diana Brown HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Eve Taylor HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Frank Anderson HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Grace Davis HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Henry Thompson HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Isabella Moore HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) James Rodriguez HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Total Sales SUM(Y2:Y-1) SUM(Y2:Y-1) SUM(Y2:Y-1) SUM(X2:X-1) Here's what it would look like in the UI (The sample calculations are not correct): Person Project Phoenix Project Infinity Project Nexus Total Sales Alice Smith 10000 9000 0 19000 Bob Johnson 50000 7000 30000 10000 Charlie Williams 10000 4000 1000 10000 Diana Brown 5000 5000 5000 10000 Eve Taylor 3000 0 7000 10000 Frank Anderson 1000 12000 4000 10000 Grace Davis 300 3000 4000 10000 Henry Thompson 500 500 1500 10000 Isabella Moore 0 0 24000 10000 James Rodriguez 0 6000 4000 10000 Total Sales 100000 100000 100000 100000 Conclusion \u00b6 In this example, we have seen how to use a three-dimensional spreadsheet to store and calculate data for projects, people, and layers for hours, fees, and sales. The three-dimensional structure of the spreadsheet allows for easy organization and calculation of data, and the use of formulas allows for automatic calculation of sums, averages, and other values. The three-dimensional spreadsheet is a powerful tool for organizing and analyzing data, and it can be used in a variety of applications and industries. Whether you are a project manager, a financial analyst, or a business owner, the three-dimensional spreadsheet can help you organize, analyze, and make better decisions with your data.","title":"Example Spreadsheet"},{"location":"examples/#example-use-case-three-dimensional-spreadsheet","text":"This is an example of how a three-dimensional spreadsheet database could be used to track and calculate hours, hourly fees, and sales for multiple projects and multiple people. The database has three dimensions: the X dimension represents different projects, the Y dimension represents different people, and the Z dimension has three layers: one for tracking hours ( Z1 ), one for tracking hourly fees ( Z2 ), and one for tracking sales ( Z3 ). The database allows users to easily track and calculate this data, and to use formulas to perform calculations such as summing hours or averaging fees.","title":"Example Use Case: Three-Dimensional Spreadsheet"},{"location":"examples/#aliases","text":"To make formulas easier to read and write, layers may be given aliases: Z1 is referred to as HOURS Z2 is referred to as FEE Z3 is referred to as SALES","title":"Aliases"},{"location":"examples/#z1-layer-for-hours-for-each-person-in-each-project","text":"This table displays the contents of the layer Z1 and cells in X and Y dimensions. Each cell contains the hours to be invoiced for each person. The last cell has a formula to calculate the sum of all hours. Person Project Phoenix Project Infinity Project Nexus Total Hours Alice Smith 100 57 0 SUM(X2:X-1) Bob Johnson 100 7 50 SUM(X2:X-1) Charlie Williams 50 20 10 SUM(X2:X-1) Diana Brown 50 50 50 SUM(X2:X-1) Eve Taylor 50 0 57 SUM(X2:X-1) Frank Anderson 23 90 40 SUM(X2:X-1) Grace Davis 15 42 40 SUM(X2:X-1) Henry Thompson 10 10 30 SUM(X2:X-1) Isabella Moore 0 0 120 SUM(X2:X-1) James Rodriguez 0 40 30 SUM(X2:X-1) Total Hours SUM(Y2:Y-1) SUM(Y2:Y-1) SUM(Y2:Y-1) SUM(X2:X-1) Cells may contain values or formulas.","title":"Z1: Layer for hours for each person in each project"},{"location":"examples/#z2-layer-for-hourly-fee-for-each-person-in-each-project","text":"This table displays the contents of the layer Z2 and cells in X and Y dimensions. Each cell contains the hourly fee for services provided. The last cell has a formula to calculate the average hourly fee. Person Project Phoenix Project Infinity Project Nexus Average Fee per hour Alice Smith 90 90 90 SUM(X2:X-1) Bob Johnson 50 50 50 SUM(X2:X-1) Charlie Williams 75 80 0 SUM(X2:X-1) Diana Brown 50 50 50 SUM(X2:X-1) Eve Taylor 50 50 50 SUM(X2:X-1) Frank Anderson 50 50 50 SUM(X2:X-1) Grace Davis 50 50 50 SUM(X2:X-1) Henry Thompson 90 90 90 SUM(X2:X-1) Isabella Moore 120 120 120 SUM(X2:X-1) James Rodriguez 200 200 200 SUM(X2:X-1) Average Fee per Hour AVG(Y2:Y-1) AVG(Y2:Y-1) AVG(Y2:Y-1) SUM(X2:X-1)","title":"Z2: Layer for hourly fee for each person in each project"},{"location":"examples/#z3-layer-for-total-sales-for-each-person-in-each-project","text":"To calculate the total sales for each person in each project, you can use the following formula: SALES = HOURS * FEE To calculate the total sales for each person in each project, you can create a new layer in the three-dimensional spreadsheet and use the formula above for each cell. This table displays the contents of the layer Z3 and cells in X and Y dimensions. Each cell contains the total sales for each person. The last cell has a formula to calculate the sum of all total sales. Person Project Phoenix Project Infinity Project Nexus Total Sales Alice Smith HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Bob Johnson HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Charlie Williams HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Diana Brown HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Eve Taylor HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Frank Anderson HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Grace Davis HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Henry Thompson HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Isabella Moore HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) James Rodriguez HOURS * FEE HOURS * FEE HOURS * FEE SUM(X2:X-1) Total Sales SUM(Y2:Y-1) SUM(Y2:Y-1) SUM(Y2:Y-1) SUM(X2:X-1) Here's what it would look like in the UI (The sample calculations are not correct): Person Project Phoenix Project Infinity Project Nexus Total Sales Alice Smith 10000 9000 0 19000 Bob Johnson 50000 7000 30000 10000 Charlie Williams 10000 4000 1000 10000 Diana Brown 5000 5000 5000 10000 Eve Taylor 3000 0 7000 10000 Frank Anderson 1000 12000 4000 10000 Grace Davis 300 3000 4000 10000 Henry Thompson 500 500 1500 10000 Isabella Moore 0 0 24000 10000 James Rodriguez 0 6000 4000 10000 Total Sales 100000 100000 100000 100000","title":"Z3: Layer for total sales for each person in each project"},{"location":"examples/#conclusion","text":"In this example, we have seen how to use a three-dimensional spreadsheet to store and calculate data for projects, people, and layers for hours, fees, and sales. The three-dimensional structure of the spreadsheet allows for easy organization and calculation of data, and the use of formulas allows for automatic calculation of sums, averages, and other values. The three-dimensional spreadsheet is a powerful tool for organizing and analyzing data, and it can be used in a variety of applications and industries. Whether you are a project manager, a financial analyst, or a business owner, the three-dimensional spreadsheet can help you organize, analyze, and make better decisions with your data.","title":"Conclusion"},{"location":"support/","text":"Support \u00b6 j3dog is a research and development project from HG . It's a playground on how to use AI to design and organize an open source project and develop a new useful technology. For the most part, it does not exist yet. However, we hope it will soon. If you are interested in supporting this project financially, please don't hesitate to contact our sales team at sales@hg.fi ! We appreciate any and all support for j3dog as we work towards bringing this new technology to fruition. Thank you for considering supporting our efforts.","title":"Support"},{"location":"support/#support","text":"j3dog is a research and development project from HG . It's a playground on how to use AI to design and organize an open source project and develop a new useful technology. For the most part, it does not exist yet. However, we hope it will soon. If you are interested in supporting this project financially, please don't hesitate to contact our sales team at sales@hg.fi ! We appreciate any and all support for j3dog as we work towards bringing this new technology to fruition. Thank you for considering supporting our efforts.","title":"Support"}]}